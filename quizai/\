import 'package:flutter/material.dart';
import 'package:quizai/screens/quiz_screen.dart';
import 'package:quizai/utils/app_styles.dart';


class HomeScreen extends StatefulWidget {
    const HomeScreen ({super.key, required this.title});

    final String title;

    @override
        State<HomeScreen> createState() => _HomeScreenState();
}


enum Anwsers {A, B, C, D, N}
class _HomeScreenState extends State<HomeScreen> {

    int _selectedIndex = 0;
    Anwsers? _anwser = Anwsers.N;

    static const TextStyle optionStyle =
        TextStyle(fontSize: 30, fontWeight: FontWeight.bold, color: AppTheme.white);


    void _onItemTapped(int index) {
        setState(() {
                _selectedIndex = index;
                });
    }

    List<Widget> buildList(BuildContext context) {
        return <Widget>[
            const Text(
                    'Index 0: Home',
                    style: optionStyle,
                    ),
                  Padding(
                    padding: EdgeInsets.only(top: 20, bottom: 20, left: 200, right: 200),
                    child: Container(
                        color: AppTheme.dark,
                      child: Column(
                              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                              children:[
                              const Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  children:
                                  [Text("that funny thin that's shows which question is that", style: TextStyle(color: AppTheme.white))
                                  ]
                                  ),
                              const Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  children: [
                                  Text("that funny thing that shows you a question", style: TextStyle(color: AppTheme.white))
                                  ]
                                  ),
                              Row(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  children: [
                                  SizedBox(
                                      height: 200,
                                      width: 500,
                                      child: Column(
                                          children: <Widget>[
                                          Material(
                                            child: Container(
                                              decoration: BoxDecoration(
                                                  border: Border.all(
                                                  color: AppTheme.bg,
                                                  width: 3,
                                                  )
                                              ),
                                              child: RadioListTile<Anwsers>(
                                                  tileColor: AppTheme.secondary,
                                                  activeColor: AppTheme.accent,
                                                  title: const Text('ODP. A', style: TextStyle(color: AppTheme.white)),
                                                  value: Anwsers.A,
                                                  groupValue: _anwser,
                                                  onChanged: (Anwsers? value) {
                                                  setState(() {
                                                          _anwser = value;
                                                          });
                                                  },
                                                  ),
                                            ),
                                          ),
                                          Material(
                                            child: Container(
                                              decoration: BoxDecoration(
                                                  border: Border.all(
                                                  color: AppTheme.bg,
                                                  width: 3,
                                                  )
                                              ),
                                              child: RadioListTile<Anwsers>(
                                                  tileColor: AppTheme.secondary,
                                                  activeColor: AppTheme.accent,
                                                  title: const Text('ODP.B', style: TextStyle(color: AppTheme.white)),
                                                  value: Anwsers.B,
                                                  groupValue: _anwser,
                                                  onChanged: (Anwsers? value) {
                                                  setState(() {
                                                          _anwser = value;
                                                          });
                                                  },
                                                  ),
                                            ),
                                          ),
                                          ],
                                          )
                                              )
                                              ],
                                              ),
                                              const Row(
                                                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                                                      children:[
                                                      Column(
                                                          mainAxisAlignment: MainAxisAlignment.center,
                                                          children: [
                                                          Text("that funny thing called back button", style: TextStyle(color: AppTheme.white))
                                                          ]
                                                          ),
                                                      Column(
                                                          mainAxisAlignment: MainAxisAlignment.center,
                                                          children: [
                                                          Text("that funny thing called next button", style: TextStyle(color: AppTheme.white))
                                                          ]
                                                          ),
                                                      ]
                                                      )
                                                  ]
                                                  ),
                    ),
                  ),
                                          const Text(
                                                  'Index 2: School',
                                                  style: optionStyle,
                                                  ),
                                          ];
    }

    @override
        Widget build(BuildContext context) {
            List<Widget> widgetOptions = buildList(context);     

            return Scaffold(
                    backgroundColor: AppTheme.bg,
                    appBar: AppBar(
                        backgroundColor: AppTheme.bg,
                        title: Text(widget.title, 
                            style: TextStyle(
                                color: AppTheme.white,
                                )
                            ),
                        leading: Builder(
                            builder: (context) {
                            return IconButton(
                                    icon: const Icon(Icons.menu, color: AppTheme.accent),
                                    onPressed: () {
                                    Scaffold.of(context).openDrawer();
                                    },
                                    );
                            },
                            ),
                        ),
                    body: Center(
                        child: widgetOptions[_selectedIndex],
                        ),
                    drawer: Drawer(
                            backgroundColor: AppTheme.primary,
                            // Add a ListView to the drawer. This ensures the user can scroll
                            // through the options in the drawer if there isn't enough vertical
                            // space to fit everything.
                            child: ListView(
                                // Important: Remove any padding from the ListView.
                                padding: EdgeInsets.zero,
                                children: [
                                const DrawerHeader(
                                    decoration: BoxDecoration(
                                        color: AppTheme.secondary,
                                        ),
                                    child: Text('Drawer Header',
                                        style: TextStyle(
                                            color: AppTheme.white,
                                            )
                                        ),
                                    ),
                                ListTile(
                                    leading: const Icon(Icons.home),
                                    title: const Text('Home'),
                                    textColor: AppTheme.white,
                                    iconColor: AppTheme.white,
                                    hoverColor: AppTheme.secondary,
                                    selectedColor: AppTheme.accent,
                                    selected: _selectedIndex == 0,
                                    onTap: () {
                                    // Update the state of the app
                                    _onItemTapped(0);
                                    // Then close the drawer
                                    Navigator.pop(context);
                                    },
                                    ),
                                ListTile(
                                        leading: const Icon(Icons.quiz),
                                        title: const Text('Quiz'),
                                        textColor: AppTheme.white,
                                        iconColor: AppTheme.white,
                                        hoverColor: AppTheme.secondary,
                                        selectedColor: AppTheme.accent,
                                        selected: _selectedIndex == 1,
                                        onTap: () {
                                        // Update the state of the app
                                        _onItemTapped(1);
                                        // Then close the drawer
                                        Navigator.pop(context);
                                        },
                                        ),
                                ListTile(
                                        leading: const Icon(Icons.history),
                                        title: const Text('History'),
                                        textColor: AppTheme.white,
                                        iconColor: AppTheme.white,
                                        hoverColor: AppTheme.secondary,
                                        selectedColor: AppTheme.accent,
                                        selected: _selectedIndex == 2,
                                        onTap: () {
                                        // Update the state of the app
                                        _onItemTapped(2);
                                        // Then close the drawer
                                        Navigator.pop(context);
                                        },
                                        ),
                                const Divider(),
                                ListTile(
                                        leading: const Icon(Icons.settings),
                                        title: const Text('Settings'),
                                        textColor: AppTheme.white,
                                        iconColor: AppTheme.white,
                                        hoverColor: AppTheme.secondary,
                                        selectedColor: AppTheme.accent,
                                        selected: _selectedIndex == 3,
                                        onTap: () {
                                        // Update the state of the app
                                        _onItemTapped(2);
                                        // Then close the drawer
                                        Navigator.pop(context);
                                        },
                                        ),
                                ListTile(
                                        leading: const Icon(Icons.logout),
                                        title: const Text('Logout'),
                                        textColor: AppTheme.white,
                                        iconColor: AppTheme.white,
                                        hoverColor: AppTheme.secondary,
                                        selectedColor: AppTheme.accent,
                                        selected: _selectedIndex == 4,
                                        onTap: () {
                                        // Update the state of the app
                                        _onItemTapped(2);
                                        // Then close the drawer
                                        Navigator.pop(context);
                                        },
                                        ),
                                ListTile(
                                        leading: const Icon(Icons.exit_to_app),
                                        title: const Text('Exit'),
                                        textColor: AppTheme.white,
                                        iconColor: AppTheme.white,
                                        hoverColor: AppTheme.secondary,
                                        selectedColor: AppTheme.accent,
                                        selected: _selectedIndex == 5,
                                        onTap: () {
                                        // Update the state of the app
                                        _onItemTapped(2);
                                        // Then close the drawer
                                        Navigator.pop(context);
                                        },
                                        ),


                                ],
                                ),
                                ),
                                );
        }
}
